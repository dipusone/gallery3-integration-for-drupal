<?php

/**
* @file
* Module to integrate drupal and gallery
* Author: Dipusone
*/

//TODO: add the management of the admin of gallery in drupal.
//Setting are yet there (check gallery3_integration_manage_admin ), we need functions.


include 'lib/PasswordHash.php';


function gallery3_integration_menu() {
  $items['admin/config/people/gallery3-integration'] = array(
    'title' => 'Gallery3 integration module',
    'description' => 'Let you manage the users and groups from gallery3 directly from drupal.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gallery3_integration_admin_form'),
    'access arguments' => array('Access admin page for the module'),
    'file' => 'gallery3_integration.admin.inc',

  );
  return $items;
}


function gallery3_integration_help($path, $arg) {
  switch ($path) {
    case "admin/help#gallery3_integration":
      return '<p>' . t("Integrate the users and groups management for gallery in drupal.<br>").
      t("It assumes that the gallary3 databases resides on the same address of the drupal one,").
      t(" otherwise it will not work.<br>").
      t("Hand written by Ikpo, so if there is any problem...Dance!") . '</p>';
      break;
  }
}


function gallery3_integration_user_presave($edit, $account, $category){

  //dvm($account);
  gallery3_integration_hash_password($account->pass);
  variable_set('user_password_gallery3_hashed', gallery3_integration_hash_password($account->pass));
 /* dvm(variable_get('user_password_gallery3_hashed'));*/
}

function gallery3_integration_user_insert(&$edit, $account, $category){

  $t1=$account->field_nome['und'][0]['value'];
  $t2=$account->field_cognome['und'][0]['value'];
  $full=$t1." ".$t2;
  $placeh=array(
    ':name'=> $account->name,
    ':full' =>$full,
    ':pass'=>variable_get('user_password_gallery3_hashed'),
    ':login_count'=>$account->access,
    ':last_login'=>'0',
    ':email'=> $account->mail,
    ':admin'=>'0',
    ':guest'=>'0');


  $USERS_TABLE = variable_get('gallery3_integration_db_prefix').'users';
  $GROUPS_TABLE = variable_get('gallery3_integration_db_prefix').'groups_users';

  db_query("INSERT INTO $USERS_TABLE ( `name`, `full_name`, `password`, `login_count`, `last_login`, `email`, `admin`, `guest`) VALUES ( :name,:full,:pass,:login_count,:last_login,:email,:admin,:guest)", $placeh);

  $id=gallery3_integration_get_user_id($account->name);

  gallery3_integration_add_groups($account);
  variable_del('user_password_gallery3_hashed');
}


function gallery3_integration_user_delete($account){
  $id=gallery3_integration_get_user_id($account->name);
  $placeh=array(':id'=> $id);

  $USERS_TABLE = variable_get('gallery3_integration_db_prefix').'users';
  $GROUPS_TABLE = variable_get('gallery3_integration_db_prefix').'groups_users';

  db_query("DELETE FROM $USERS_TABLE WHERE id=:id",$placeh);
  db_query("DELETE FROM $GROUPS_TABLE WHERE user_id=:id",$placeh);

  variable_del('user_password_gallery3_hashed');
}


function gallery3_integration_user_cancel($edit, $account, $method){
  gallery3_integration_user_delete($account);

}


function gallery3_integration_user_update(&$edit, $account, $category) {

  $t1=$account->field_nome['und'][0]['value'];
  $t2=$account->field_cognome['und'][0]['value'];
  $full=$t1." ".$t2;
  $id=gallery3_integration_get_user_id($account->name);
  $placeh=array(
    ':name'=> $account->name,
    ':full' =>$full,
    ':pass'=>variable_get('user_password_gallery3_hashed'),
    ':login_count'=>$account->access,
    ':email'=> $account->mail,
    ':id'=>$id
    );

  $USERS_TABLE = variable_get('gallery3_integration_db_prefix').'users';
  $GROUPS_TABLE = variable_get('gallery3_integration_db_prefix').'groups_users';

  db_query("UPDATE $USERS_TABLE SET `name`=:name, `full_name`=:full, `password`=:pass, `login_count`=:login_count, `email`=:email  WHERE id=:id", $placeh);
  //TODO: instead of deleting all groups for the user get them and apply only modifications.
  db_query("DELETE FROM $GROUPS_TABLE WHERE user_id=:id",array(':id' => $id ));
  gallery3_integration_add_groups($account);
  variable_del('user_password_gallery3_hashed');


}

function gallery3_integration_user_role_insert($role){
  //If it is asked not to manage the groups or the group already exist in gallery3 return

  if(!variable_get('gallery3_integration_manage_groups') || gallery3_interation_get_group_id($role->name)){
    return;
  }

  $GROUPS_TABLE = variable_get('gallery3_integration_db_prefix').'groups';
  db_query("INSERT INTO ".$GROUPS_TABLE." ( `name`) VALUES ( :name)",array(':name' => $role->name));
}

function gallery3_integration_user_role_delete($role){

  $id = gallery3_interation_get_group_id($role->name);
  //If it is asked not to manage groups or the group do not exist in gallery3 return
  if(!variable_get('gallery3_integration_manage_groups') || !$id){
    return;
  }

  $GROUPS_USERS_TABLE = variable_get('gallery3_integration_db_prefix').'groups_users';
  //Remove all associations user->groups
  db_query("DELETE FROM $GROUPS_USERS_TABLE WHERE group_id=:id",array(':id' => $id ));

  $GROUPS_TABLE = variable_get('gallery3_integration_db_prefix').'groups';
  db_query("DELETE FROM $GROUPS_TABLE WHERE id=:id",array(':id' => $id ));



}

function gallery3_interation_get_group_id($group){
  $GROUPS_TABLE = variable_get('gallery3_integration_db_prefix').'groups';

  $res=db_query("SELECT `id` FROM $GROUPS_TABLE WHERE name=:nome ",array(':nome' => $group))->fetchField();
  return $res;

}



function gallery3_integration_get_user_id($user){

  $ph=array(':nome'=>$user);

  $USERS_TABLE = variable_get('gallery3_integration_db_prefix').'users';
  $res=db_query("SELECT `id` FROM $USERS_TABLE WHERE name=:nome ",$ph)->fetchField();
  return $res;
}

function gallery3_integration_hash_password($pass){
  #hash calculator for the password
  $hasher= new PasswordHash(10, true);
  $pass=$hasher->HashPassword($pass);
  return $pass;

}


function gallery3_integration_get_gallery3_groups(){

  $GROUPS_TABLE = variable_get('gallery3_integration_db_prefix').'groups';
  $results = db_query("SELECT `id`, name from $GROUPS_TABLE ORDER BY name")->fetchAll();

  $groups = array();
  foreach ($results as $group) {
    $groups[$group->id] = $group->name;
  }
  //Added to let the user not to select and association
  $groups['None'] = 'None';

  return $groups;


}

function gallery3_integration_add_groups($account){

  $g_id=gallery3_integration_get_user_id($account->name);

  $USERS_TABLE = variable_get('gallery3_integration_db_prefix').'users';
  $GROUPS_TABLE = variable_get('gallery3_integration_db_prefix').'groups_users';

  //default roles
  $roles = array('1' => $g_id,
                 '2' => $g_id);

  //Build a list of role and id
  //This will also eliminate possible duplicates in roles
  foreach ($account->roles as $d_id => $d_role) {
    //for now skip admin role and the base one
    if($d_role <= 3){
      countinue;
    }
    //FIXME: Error when trying to add the same role
    $g_role = variable_get('gallery3_integration_role_'."$d_id");
    if(!empty($g_role) && $g_role !== 'None'){
      $roles["$g_role"] = $g_id;
    }
  }

  foreach ($roles as $g_role => $g_id) {
    db_query("INSERT INTO $GROUPS_TABLE (`group_id`, `user_id`) VALUES (:role,  :id)",
        array(':role' => $g_role,':id'=>$g_id));

  }

}
